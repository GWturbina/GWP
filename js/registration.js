/* jshint esversion: 8 */
/* global web3Manager, contracts, Utils, ethers, showPage, app */

/**
 * Registration System - –ù–û–í–û–ï
 * –í–µ—Ä—Å–∏—è: 2.1 - –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
 */

// üî• –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
function showRegistrationModal() {
  let modal = document.getElementById('registrationModal');
  
  // –°–æ–∑–¥–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
  if (!modal) {
    createRegistrationModal();
    modal = document.getElementById('registrationModal');
  }
  
  // –ü–æ–ª—É—á–∏—Ç—å sponsor ID –∏–∑ URL
  const urlParams = new URLSearchParams(window.location.search);
  const refId = urlParams.get('ref');
  
  if (refId) {
    const sponsorInput = document.getElementById('sponsorInput');
    if (sponsorInput) {
      sponsorInput.value = refId;
    }
  }
  
  modal.style.display = 'flex';
  console.log('üìã Registration modal shown');
}

// üî• –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –°–æ–∑–¥–∞—Ç—å HTML –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function createRegistrationModal() {
  const modal = document.createElement('div');
  modal.id = 'registrationModal';
  modal.className = 'modal registration-modal';
  modal.innerHTML = `
    <div class="modal-overlay" onclick="event.stopPropagation()"></div>
    <div class="modal-content registration-content">
      <span class="close" onclick="closeRegistrationModal()">&times;</span>
      
      <div class="modal-header">
        <h2 data-translate="registration.title">üåü Join GlobalWay</h2>
        <p data-translate="registration.subtitle">Register to start earning</p>
      </div>
      
      <div class="modal-body">
        <div class="form-group">
          <label data-translate="registration.sponsorLabel">Sponsor ID:</label>
          <input 
            id="sponsorInput" 
            type="text" 
            placeholder="GW-XXXXXXX"
            data-translate="registration.sponsorPlaceholder"
            required
          >
          <small class="help-text" data-translate="registration.sponsorHelp">
            Enter your sponsor's ID (format: GW-XXXXXXX)
          </small>
        </div>
        
        <div class="registration-info">
          <div class="info-item">
            <span class="icon">üí∞</span>
            <div>
              <strong data-translate="registration.cost">Registration Cost:</strong>
              <span id="regCost">0.0015 BNB</span>
            </div>
          </div>
          <div class="info-item">
            <span class="icon">üéÅ</span>
            <div>
              <strong data-translate="registration.bonus">Welcome Bonus:</strong>
              <span data-translate="registration.level1">Level 1 + 5 GWT</span>
            </div>
          </div>
        </div>
      </div>
      
      <div class="modal-footer">
        <button 
          id="registerBtn" 
          class="btn-primary" 
          onclick="register()"
          data-translate="registration.registerBtn"
        >
          Register Now
        </button>
        <button 
          class="btn-secondary" 
          onclick="closeRegistrationModal()"
          data-translate="common.cancel"
        >
          Cancel
        </button>
      </div>
    </div>
  `;
  
  document.body.appendChild(modal);
  console.log('‚úÖ Registration modal created');
  
  // –ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø–µ—Ä–µ–≤–æ–¥—ã –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
  if (window.i18n && window.i18n.translatePage) {
    window.i18n.translatePage();
  }
}

// üî• –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
function closeRegistrationModal() {
  const modal = document.getElementById('registrationModal');
  if (modal) {
    modal.style.display = 'none';
  }
  console.log('üìã Registration modal closed');
}

// üî• –£–õ–£–ß–®–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø: –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
async function register() {
  let sponsorInput = document.getElementById('sponsorInput');
  const registerBtn = document.getElementById('registerBtn');
  
  // –ï—Å–ª–∏ input –Ω–µ –Ω–∞–π–¥–µ–Ω - —Å–æ–∑–¥–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  if (!sponsorInput) {
    console.warn('‚ö†Ô∏è Sponsor input not found, creating modal...');
    
    // –°–æ–∑–¥–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!document.getElementById('registrationModal')) {
      createRegistrationModal();
    }
    
    // –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞–π—Ç–∏ —Å–Ω–æ–≤–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è
    sponsorInput = document.getElementById('sponsorInput');
    
    if (!sponsorInput) {
      console.error('‚ùå Failed to create registration form');
      Utils.showNotification('Registration form not available', 'error');
      return;
    }
  }
  
  const sponsorId = sponsorInput.value.trim();
  
  if (!sponsorId) {
    Utils.showNotification('Please enter Sponsor ID', 'warning');
    sponsorInput.focus();
    return;
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞
  if (!sponsorId.match(/^GW-\d{7}$/i)) {
    Utils.showNotification('Invalid Sponsor ID format (GW-XXXXXXX)', 'warning');
    sponsorInput.focus();
    return;
  }
  
  try {
    // –û—Ç–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫—É
    if (registerBtn) {
      registerBtn.disabled = true;
      registerBtn.textContent = 'Processing...';
    }
    
    // –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª—ë–∫ –µ—Å–ª–∏ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω
    if (!web3Manager.connected) {
      console.log('üì± Wallet not connected, connecting...');
      Utils.showLoader(true, 'Connecting wallet...');
      
      try {
        await web3Manager.connect();
        await contracts.init();
      } catch (connectError) {
        console.error('Wallet connection failed:', connectError);
        Utils.showNotification('Please connect your wallet first', 'error');
        
        if (registerBtn) {
          registerBtn.disabled = false;
          registerBtn.textContent = 'Register Now';
        }
        Utils.hideLoader();
        return;
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const isAlreadyRegistered = await contracts.isUserRegistered(web3Manager.address);
    
    if (isAlreadyRegistered) {
      Utils.showNotification('You are already registered!', 'info');
      closeRegistrationModal();
      
      if (registerBtn) {
        registerBtn.disabled = false;
        registerBtn.textContent = 'Register Now';
      }
      
      // –ü–µ—Ä–µ–π—Ç–∏ –≤ dashboard
      if (typeof showPage === 'function') {
        showPage('dashboard');
      }
      if (app && app.loadDashboard) {
        await app.loadDashboard();
      }
      
      return;
    }
    
    Utils.showLoader(true, 'Checking sponsor...');
    
    // –ü–æ–ª—É—á–∏—Ç—å –∞–¥—Ä–µ—Å —Å–ø–æ–Ω—Å–æ—Ä–∞ –ø–æ ID
    let sponsorAddress;
    
    try {
      sponsorAddress = await contracts.contracts.globalWay.idToAddress(sponsorId);
    } catch (error) {
      console.error('Failed to get sponsor address:', error);
      Utils.showNotification('Failed to verify sponsor. Please check the ID.', 'error');
      
      if (registerBtn) {
        registerBtn.disabled = false;
        registerBtn.textContent = 'Register Now';
      }
      Utils.hideLoader();
      return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–ø–æ–Ω—Å–æ—Ä —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (!sponsorAddress || sponsorAddress === ethers.constants.AddressZero) {
      Utils.showNotification('Sponsor not found. Please check the ID.', 'error');
      sponsorInput.focus();
      
      if (registerBtn) {
        registerBtn.disabled = false;
        registerBtn.textContent = 'Register Now';
      }
      Utils.hideLoader();
      return;
    }
    
    console.log('‚úÖ Sponsor found:', sponsorAddress);
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —Å–ø–æ–Ω—Å–æ—Ä –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
    const sponsorInfo = await contracts.getUserInfo(sponsorAddress);
    
    if (!sponsorInfo.id || sponsorInfo.registrationTime === 0) {
      Utils.showNotification('Invalid sponsor. Please check the ID.', 'error');
      
      if (registerBtn) {
        registerBtn.disabled = false;
        registerBtn.textContent = 'Register Now';
      }
      Utils.hideLoader();
      return;
    }
    
    Utils.hideLoader();
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    const cost = CONFIG.LEVEL_PRICES[0];
    const confirmed = confirm(
      `Register in GlobalWay?\n\n` +
      `Sponsor: ${sponsorId}\n` +
      `Cost: ${cost} BNB\n` +
      `Bonus: Level 1 + 5 GWT tokens\n\n` +
      `Proceed with registration?`
    );
    
    if (!confirmed) {
      if (registerBtn) {
        registerBtn.disabled = false;
        registerBtn.textContent = 'Register Now';
      }
      return;
    }
    
    Utils.showLoader(true, 'Registering...');
    
    // –í—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    const receipt = await contracts.register(sponsorAddress);
    
    console.log('‚úÖ Registration successful!');
    console.log('Transaction:', receipt.transactionHash);
    
    Utils.hideLoader();
    
    Utils.showNotification(
      'üéâ Welcome to GlobalWay! Registration successful!',
      'success'
    );
    
    // –°–æ—Ö—Ä–∞–Ω–∏—Ç—å sponsor ID
    localStorage.setItem('sponsorId', sponsorId);
    localStorage.setItem('registered', 'true');
    
    // –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    closeRegistrationModal();
    
    // –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ app
    if (app) {
      app.isRegistered = true;
    }
    
    // –ü–µ—Ä–µ–π—Ç–∏ –≤ dashboard
    if (typeof showPage === 'function') {
      showPage('dashboard');
    }
    
    // –ó–∞–≥—Ä—É–∑–∏—Ç—å dashboard
    if (app && app.loadDashboard) {
      await app.loadDashboard();
    }
    
  } catch (error) {
    console.error('‚ùå Registration error:', error);
    
    Utils.hideLoader();
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –æ—à–∏–±–æ–∫
    if (error.message.includes('user rejected') || error.message.includes('User denied')) {
      Utils.showNotification('Transaction cancelled', 'info');
    } else if (error.message.includes('insufficient funds')) {
      Utils.showNotification('Insufficient BNB balance', 'error');
    } else if (error.message.includes('already registered')) {
      Utils.showNotification('Already registered', 'info');
      closeRegistrationModal();
    } else {
      const errorMsg = error.reason || error.message || 'Registration failed';
      Utils.showNotification(errorMsg, 'error');
    }
    
  } finally {
    // –í–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫—É –æ–±—Ä–∞—Ç–Ω–æ
    if (registerBtn) {
      registerBtn.disabled = false;
      registerBtn.textContent = 'Register Now';
    }
    Utils.hideLoader();
  }
}

// üî• –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
async function checkRegistrationOnLoad() {
  try {
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –µ—Å—Ç—å –ª–∏ ref –ø–∞—Ä–∞–º–µ—Ç—Ä –≤ URL
    const urlParams = new URLSearchParams(window.location.search);
    const refId = urlParams.get('ref');
    
    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å localStorage
    const visited = localStorage.getItem('visited');
    const registered = localStorage.getItem('registered');
    
    // –ï—Å–ª–∏ –ø–µ—Ä–≤—ã–π –≤–∏–∑–∏—Ç –∏ –µ—Å—Ç—å ref - –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª–∫—É
    if (!visited && refId) {
      console.log('üÜï First visit with referral link');
      localStorage.setItem('visited', 'true');
      
      // –ó–∞–¥–µ—Ä–∂–∫–∞ —á—Ç–æ–±—ã —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∑–∏–ª–∞—Å—å
      setTimeout(() => {
        showRegistrationModal();
      }, 1000);
      
      return;
    }
    
    // –ï—Å–ª–∏ –∫–æ—à–µ–ª—ë–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω - –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
    if (web3Manager.connected) {
      const isReg = await contracts.isUserRegistered(web3Manager.address);
      
      if (!isReg && !registered) {
        console.log('‚ö†Ô∏è User not registered');
        setTimeout(() => {
          showRegistrationModal();
        }, 1000);
      }
    }
    
    // –û—Ç–º–µ—Ç–∏—Ç—å —á—Ç–æ —Å–∞–π—Ç –ø–æ—Å–µ—â—ë–Ω
    if (!visited) {
      localStorage.setItem('visited', 'true');
    }
    
  } catch (error) {
    console.error('checkRegistrationOnLoad error:', error);
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
if (typeof window !== 'undefined') {
  window.showRegistrationModal = showRegistrationModal;
  window.closeRegistrationModal = closeRegistrationModal;
  window.register = register;
  window.checkRegistrationOnLoad = checkRegistrationOnLoad;
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', () => {
    setTimeout(checkRegistrationOnLoad, 2000);
  });
} else {
  setTimeout(checkRegistrationOnLoad, 2000);
}
